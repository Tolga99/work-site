{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../models/user';\nimport { UUID } from 'angular2-uuid';\nimport { NgbdModalFocus } from '../modal/modal-focus';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../services/storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ngx-translate/core\";\nexport let TabContactsClient = /*#__PURE__*/(() => {\n  class TabContactsClient {\n    constructor(modalS, storageService, router, route) {\n      this.modalS = modalS;\n      this.storageService = storageService;\n      this.router = router;\n      this.route = route;\n      this.contactsList = [];\n      this.indexFind = -5;\n      this.formClient = new FormGroup({\n        firstName: new FormControl('', Validators.required),\n        lastName: new FormControl('', Validators.required),\n        address: new FormControl(''),\n        phone: new FormControl(''),\n        mail: new FormControl(''),\n        tva: new FormControl(''),\n        iban: new FormControl(''),\n        bic: new FormControl('')\n      });\n      this.modal = new NgbdModalFocus(this.modalS);\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.storageService.init();\n        this.contactsList = yield this.storageService.get('Contacts');\n        if (this.contactsList == null) this.contactsList = new Array();\n        this.modif = this.route.snapshot.paramMap.get('userId');\n        this.tag = this.route.snapshot.paramMap.get('tag');\n\n        if (this.modif != null) {\n          console.log('modification', this.modif);\n          this.storageService.get('Contacts');\n          this.indexFind = this.contactsList.findIndex(x => x.userId === this.modif);\n\n          if (this.indexFind >= 0) {\n            this.clientId = this.contactsList[this.indexFind].userId;\n            this.formClient.setValue({\n              firstName: this.contactsList[this.indexFind].firstName,\n              lastName: this.contactsList[this.indexFind].lastName,\n              address: this.contactsList[this.indexFind].address,\n              phone: this.contactsList[this.indexFind].phone,\n              mail: this.contactsList[this.indexFind].mail,\n              tva: this.contactsList[this.indexFind].tva,\n              iban: this.contactsList[this.indexFind].iban,\n              bic: this.contactsList[this.indexFind].bic\n            });\n          }\n        } else {\n          console.log('creation', this.modif);\n          this.clientId = this.generateUUID();\n        }\n      });\n    }\n\n    onSubmit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const invalid = [];\n        const controls = this.formClient.controls;\n\n        for (const name in controls) {\n          if (controls[name].invalid) {\n            let nom = '';\n            if (name === 'firstName') nom = 'Prénom';\n            if (name === 'lastName') nom = 'Nom';\n            invalid.push(nom);\n          }\n        }\n\n        if (!this.formClient.valid) {\n          let res = null;\n          yield this.modal.open('field', invalid.toString()).then(result => result.result.then(data => {\n            res = 'OK';\n          }, reason => {\n            res = 'DISMISS';\n          }));\n          return;\n        }\n\n        this.client = new User(this.clientId, this.formClient.get('firstName').value, this.formClient.get('lastName').value, this.formClient.get('address').value, this.formClient.get('phone').value, this.formClient.get('mail').value, null, this.formClient.get('tva').value, this.formClient.get('iban').value, this.formClient.get('bic').value);\n\n        if (this.indexFind >= 0) {\n          // this.contactsList.splice(this.indexFind,1);\n          this.contactsList[this.indexFind] = this.client;\n        } else this.contactsList.push(this.client);\n\n        this.storageService.set('Contacts', this.contactsList);\n\n        if (!this.tag) {\n          this.router.navigate(['/tb-contacts'], {\n            replaceUrl: true\n          });\n        } else if (this.tag.toLowerCase() === 'chantier') {\n          this.router.navigate(['/createworksite'], {\n            replaceUrl: true\n          });\n        } else if (this.tag.toLowerCase() === 'profile') {\n          this.router.navigate(['/client', {\n            userId: this.modif\n          }], {\n            replaceUrl: true\n          });\n        }\n      });\n    }\n\n    generateUUID() {\n      this.uuidValue = UUID.UUID();\n      return this.uuidValue;\n    }\n\n    GoBack() {\n      if (!this.tag) {\n        this.router.navigate(['/tb-contacts'], {\n          replaceUrl: true\n        });\n      } else if (this.tag.toLowerCase() === 'chantier') {\n        this.router.navigate(['/createworksite'], {\n          replaceUrl: true\n        });\n      } else if (this.tag.toLowerCase() === 'profile') {\n        this.router.navigate(['/client', {\n          userId: this.modif\n        }], {\n          replaceUrl: true\n        });\n      }\n    }\n\n  }\n\n  TabContactsClient.ɵfac = function TabContactsClient_Factory(t) {\n    return new (t || TabContactsClient)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  TabContactsClient.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TabContactsClient,\n    selectors: [[\"app-tb-contacts-client\"]],\n    decls: 56,\n    vars: 36,\n    consts: [[3, \"translucent\"], [3, \"click\"], [\"name\", \"arrow-back\"], [3, \"fullscreen\"], [1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [\"required\", \"required\", 1, \"form-group\"], [\"position\", \"floating\"], [\"type\", \"text\", \"id\", \"firstName\", \"placeholder\", \"Your name..\", \"formControlName\", \"firstName\", \"required\", \"required\"], [\"type\", \"text\", \"id\", \"lastName\", \"placeholder\", \"Your last name..\", \"formControlName\", \"lastName\", \"required\", \"required\"], [\"type\", \"text\", \"id\", \"address\", \"placeholder\", \"..\", \"formControlName\", \"address\"], [1, \"form-group\"], [\"type\", \"text\", \"id\", \"phone\", \"placeholder\", \"...\", \"formControlName\", \"phone\"], [\"type\", \"text\", \"id\", \"mail\", \"placeholder\", \"...\", \"formControlName\", \"mail\"], [\"type\", \"text\", \"id\", \"tva\", \"placeholder\", \"...\", \"formControlName\", \"tva\"], [\"type\", \"text\", \"id\", \"iban\", \"placeholder\", \"BE ...\", \"formControlName\", \"iban\"], [\"type\", \"text\", \"id\", \"bic\", \"placeholder\", \"...\", \"formControlName\", \"bic\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\"]],\n    template: function TabContactsClient_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function TabContactsClient_Template_ion_button_click_2_listener() {\n          return ctx.GoBack();\n        });\n        i0.ɵɵelement(3, \"ion-icon\", 2);\n        i0.ɵɵelementStart(4, \"ion-label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-title\");\n        i0.ɵɵtext(8);\n        i0.ɵɵpipe(9, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"ion-content\", 3);\n        i0.ɵɵelementStart(11, \"div\", 4);\n        i0.ɵɵelementStart(12, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function TabContactsClient_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(13, \"ion-item\", 6);\n        i0.ɵɵelementStart(14, \"ion-label\", 7);\n        i0.ɵɵtext(15);\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"ion-input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"ion-item\", 6);\n        i0.ɵɵelementStart(19, \"ion-label\", 7);\n        i0.ɵɵtext(20);\n        i0.ɵɵpipe(21, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"ion-input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-item\", 6);\n        i0.ɵɵelementStart(24, \"ion-label\", 7);\n        i0.ɵɵtext(25);\n        i0.ɵɵpipe(26, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"ion-input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"ion-item\", 11);\n        i0.ɵɵelementStart(29, \"ion-label\", 7);\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(32, \"ion-input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"ion-item\", 11);\n        i0.ɵɵelementStart(34, \"ion-label\", 7);\n        i0.ɵɵtext(35);\n        i0.ɵɵpipe(36, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"ion-input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"ion-item\", 11);\n        i0.ɵɵelementStart(39, \"ion-label\", 7);\n        i0.ɵɵtext(40);\n        i0.ɵɵpipe(41, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(42, \"ion-input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"ion-item\", 11);\n        i0.ɵɵelementStart(44, \"ion-label\", 7);\n        i0.ɵɵtext(45);\n        i0.ɵɵpipe(46, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(47, \"ion-input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"ion-item\", 11);\n        i0.ɵɵelementStart(49, \"ion-label\", 7);\n        i0.ɵɵtext(50);\n        i0.ɵɵpipe(51, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(52, \"ion-input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"button\", 17);\n        i0.ɵɵtext(54);\n        i0.ɵɵpipe(55, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, \"back\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 16, \"contacts\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formClient);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(16, 18, \"fName\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(21, 20, \"name\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(26, 22, \"address\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(31, 24, \"phone\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(36, 26, \"mail\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(41, 28, \"tva\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(46, 30, \"iban\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(51, 32, \"bic\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(55, 34, \"saveClient\"));\n      }\n    },\n    directives: [i4.IonHeader, i4.IonToolbar, i4.IonButton, i4.IonIcon, i4.IonLabel, i4.IonTitle, i4.IonContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i4.IonItem, i4.IonInput, i4.TextValueAccessor, i5.NgControlStatus, i5.FormControlName, i5.RequiredValidator],\n    pipes: [i6.TranslatePipe],\n    styles: [\".abs-center-x[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%)}.my-custom-scrollbar[_ngcontent-%COMP%]{position:relative;height:200px;overflow:auto}.table-wrapper-scroll-y[_ngcontent-%COMP%]{display:block}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;margin-top:6px;margin-bottom:16px;resize:vertical}input[type=submit][_ngcontent-%COMP%]{background-color:#04aa6d;color:#fff;padding:12px 20px;border:none;border-radius:4px;cursor:pointer}input[type=submit][_ngcontent-%COMP%]:hover{background-color:#45a049}.form-group[required=required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(.required){border:1px solid black}.form-group[required=required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:1px solid red}.form-group[required=required][_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:after{content:\\\" *\\\";color:red}.form-group[required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:1px solid red}.form-group[required][_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:after{content:\\\" *\\\";color:red}\"]\n  });\n  return TabContactsClient;\n})();","map":null,"metadata":{},"sourceType":"module"}