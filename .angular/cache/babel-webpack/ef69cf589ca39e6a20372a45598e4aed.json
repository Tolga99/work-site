{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { IonicStorageModule } from '@ionic/storage-angular';\nimport { StorageService } from './services/storage.service';\nimport { CalendarModule, DateAdapter } from 'angular-calendar';\nimport { adapterFactory } from 'angular-calendar/date-adapters/date-fns';\nimport { File } from '@awesome-cordova-plugins/file/ngx';\nimport { LocalNotifications } from '@ionic-native/local-notifications/ngx';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { PhotoService } from './services/photo.service';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { AngularFireModule } from '@angular/fire/compat';\nimport { AngularFireAuthModule } from '@angular/fire/compat/auth';\nimport { AngularFireStorageModule } from '@angular/fire/compat/storage';\nimport { AngularFirestoreModule } from '@angular/fire/compat/firestore';\nimport { AngularFireDatabaseModule } from '@angular/fire/compat/database';\nimport { firebaseConfig } from '../environments/environment.prod';\nimport { AuthService } from './shared/services/auth.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat\";\nimport * as i2 from \"@ngx-translate/core\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@ionic/storage-angular\";\nimport * as i5 from \"angular-calendar\";\nimport * as i6 from \"@angular/service-worker\"; // export function HttpLoaderFactory(http: HttpClient) {\n//   return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n//   }\n\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {}\n\n  AppModule.ɵfac = function AppModule_Factory(t) {\n    return new (t || AppModule)();\n  };\n\n  AppModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppModule,\n    bootstrap: [AppComponent]\n  });\n  AppModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [HttpClientModule, {\n      provide: RouteReuseStrategy,\n      useClass: IonicRouteStrategy\n    }, StorageService, File, LocalNotifications, PhotoService, AuthService],\n    imports: [[BrowserModule, AngularFireModule.initializeApp(firebaseConfig), AngularFireAuthModule, AngularFirestoreModule, AngularFireStorageModule, AngularFireDatabaseModule, NgbModule, TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: HttpLoaderFactory,\n        deps: [HttpClient]\n      },\n      defaultLanguage: 'fr'\n    }), IonicModule.forRoot(), BrowserAnimationsModule, AppRoutingModule, HttpClientModule, IonicStorageModule.forRoot(), CalendarModule.forRoot({\n      provide: DateAdapter,\n      useFactory: adapterFactory\n    }), ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the application is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    })]]\n  });\n  return AppModule;\n})();\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http);\n}","map":null,"metadata":{},"sourceType":"module"}