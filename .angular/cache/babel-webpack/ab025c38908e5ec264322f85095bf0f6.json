{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { NgbdModalFocus } from '../modal/modal-focus';\nimport { InvoiceSettings } from '../models/Settings/invoiceSettings';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../services/storage.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@ngx-translate/core\";\n\nfunction Settings_ion_select_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", c_r1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", c_r1, \" \");\n  }\n}\n\nexport let Settings = /*#__PURE__*/(() => {\n  class Settings {\n    constructor(modalS, storageService, router) {\n      this.modalS = modalS;\n      this.storageService = storageService;\n      this.router = router;\n      this.ext = '';\n      this.extTypes = ['Numéro (Ex: 34)', 'Date (Ex: JJ/MM/AAAA)', 'Numéro-Date', 'Date-Numero'];\n      this.formInvoice = new FormGroup({\n        factureName: new FormControl('', Validators.required),\n        exts: new FormControl('', Validators.required),\n        extType: new FormControl(''),\n        extNum: new FormControl(''),\n        positionAvant: new FormControl(''),\n        positionApres: new FormControl('')\n      });\n      this.modal = new NgbdModalFocus(this.modalS);\n      console.log('Module settings');\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.storageService.init();\n        let invoiceSettings = yield this.storageService.get('MyInvoiceSettings');\n        console.log(invoiceSettings);\n\n        if (invoiceSettings != null) {\n          let selectedExt;\n\n          if (invoiceSettings.exts === 'Num') {\n            selectedExt = 0;\n          } else if (invoiceSettings.exts === 'Date') {\n            selectedExt = 1;\n          } else if (invoiceSettings.exts === 'NumDate') {\n            selectedExt = 2;\n          } else if (invoiceSettings.exts === 'DateNum') {\n            selectedExt = 3;\n          } else selectedExt = 0;\n\n          this.formInvoice.setValue({\n            factureName: invoiceSettings.factureName,\n            exts: this.extTypes[selectedExt],\n            extType: invoiceSettings.extType,\n            extNum: invoiceSettings.extNum,\n            positionAvant: invoiceSettings.positionAvant,\n            positionApres: invoiceSettings.positionApres\n          });\n        } else {\n          this.formInvoice.setValue({\n            factureName: '',\n            exts: '',\n            extType: '',\n            extNum: '0',\n            positionAvant: false,\n            positionApres: false\n          });\n        }\n      });\n    }\n\n    UpdateInvoiceSettings() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const invalid = [];\n        const controls = this.formInvoice.controls;\n\n        for (const name in controls) {\n          if (controls[name].invalid) {\n            let nom = '';\n            if (name === 'firstName') nom = 'Prénom';\n            if (name === 'lastName') nom = 'Nom';\n            invalid.push(nom);\n          }\n        }\n\n        if (!this.formInvoice.valid) {\n          let res = null;\n          yield this.modal.open('field', invalid.toString()).then(result => result.result.then(data => {\n            res = 'OK';\n          }, reason => {\n            res = 'DISMISS';\n          }));\n          return;\n        }\n\n        console.log(this.ext, this.ext.length);\n        let selectedExt = '';\n\n        if (this.ext === 'Numéro (Ex: 34)') {\n          selectedExt = 'Num';\n        } else if (this.ext === 'Date (Ex: JJ/MM/AAAA)') {\n          selectedExt = 'Date';\n        } else if (this.ext === 'Numéro-Date') {\n          selectedExt = 'NumDate';\n        } else if (this.ext === 'Date-Numero') {\n          selectedExt = 'DateNum';\n        }\n\n        this.storageService.init();\n        this.storageService.set('MyInvoiceSettings', new InvoiceSettings(this.formInvoice.get('factureName').value, selectedExt, this.formInvoice.get('extType').value, this.formInvoice.get('extNum').value, this.formInvoice.get('positionAvant').value, this.formInvoice.get('positionApres').value));\n        console.log('Parametres de facture actualisé, redirection...');\n        this.router.navigate(['tb-settings'], {\n          replaceUrl: true\n        });\n      });\n    }\n\n    selectExtType(event) {\n      console.log('select', event);\n      this.ext = event.target.value;\n    }\n\n    GoBack() {\n      this.router.navigate(['tb-settings'], {\n        replaceUrl: true\n      });\n    }\n\n  }\n\n  Settings.ɵfac = function Settings_Factory(t) {\n    return new (t || Settings)(i0.ɵɵdirectiveInject(i1.NgbModal), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  Settings.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: Settings,\n    selectors: [[\"app-settings\"]],\n    decls: 53,\n    vars: 34,\n    consts: [[3, \"translucent\"], [3, \"click\"], [\"name\", \"arrow-back\"], [3, \"fullscreen\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"jumbotron\", \"text-center\"], [1, \"card-header\"], [1, \"form-group\"], [\"position\", \"stacked\"], [\"type\", \"text\", \"id\", \"factureName\", \"placeholder\", \"FactureVente\", \"formControlName\", \"factureName\"], [\"interface\", \"alert\", \"okText\", \"Ok\", \"cancelText\", \"Annuler\", \"formControlName\", \"exts\", 3, \"ionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"position\", \"stacked\", 2, \"font-size\", \"medium\"], [\"position\", \"fixed\", 2, \"font-size\", \"smaller\"], [\"id\", \"avant\", \"name\", \"avant\", \"formControlName\", \"positionAvant\"], [\"name\", \"apres\", \"id\", \"apres\", \"formControlName\", \"positionApres\"], [\"type\", \"text\", \"id\", \"ext\", \"placeholder\", \"- / ; _ #\", \"formControlName\", \"extType\"], [\"type\", \"text\", \"id\", \"ext\", \"placeholder\", \"1\", \"formControlName\", \"extNum\"], [\"type\", \"submit\", 1, \"btn\", \"btn-secondary\"], [3, \"value\"]],\n    template: function Settings_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-toolbar\");\n        i0.ɵɵelementStart(2, \"ion-button\", 1);\n        i0.ɵɵlistener(\"click\", function Settings_Template_ion_button_click_2_listener() {\n          return ctx.GoBack();\n        });\n        i0.ɵɵelement(3, \"ion-icon\", 2);\n        i0.ɵɵelementStart(4, \"ion-label\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\", 3);\n        i0.ɵɵelementStart(8, \"div\");\n        i0.ɵɵelementStart(9, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function Settings_Template_form_ngSubmit_9_listener() {\n          return ctx.UpdateInvoiceSettings();\n        });\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵtext(12);\n        i0.ɵɵpipe(13, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-item\", 7);\n        i0.ɵɵelementStart(15, \"ion-label\", 8);\n        i0.ɵɵtext(16);\n        i0.ɵɵpipe(17, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"ion-input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"ion-item\");\n        i0.ɵɵelementStart(20, \"ion-label\", 8);\n        i0.ɵɵtext(21);\n        i0.ɵɵpipe(22, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-select\", 10);\n        i0.ɵɵlistener(\"ionChange\", function Settings_Template_ion_select_ionChange_23_listener($event) {\n          return ctx.selectExtType($event);\n        });\n        i0.ɵɵelement(24, \"ion-select-option\");\n        i0.ɵɵtemplate(25, Settings_ion_select_option_25_Template, 2, 2, \"ion-select-option\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"ion-item\", 7);\n        i0.ɵɵelementStart(27, \"ion-label\", 12);\n        i0.ɵɵtext(28);\n        i0.ɵɵpipe(29, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"ion-item\");\n        i0.ɵɵelementStart(31, \"ion-label\", 13);\n        i0.ɵɵtext(32);\n        i0.ɵɵpipe(33, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"ion-checkbox\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"ion-item\");\n        i0.ɵɵelementStart(36, \"ion-label\", 13);\n        i0.ɵɵtext(37);\n        i0.ɵɵpipe(38, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"ion-checkbox\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"ion-item\", 7);\n        i0.ɵɵelementStart(41, \"ion-label\", 8);\n        i0.ɵɵtext(42);\n        i0.ɵɵpipe(43, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(44, \"ion-input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"ion-item\", 7);\n        i0.ɵɵelementStart(46, \"ion-label\", 8);\n        i0.ɵɵtext(47);\n        i0.ɵɵpipe(48, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(49, \"ion-input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"button\", 18);\n        i0.ɵɵtext(51);\n        i0.ɵɵpipe(52, \"translate\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 14, \"back\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formInvoice);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(13, 16, \"invoices\"), \" \");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(17, 18, \"invoiceName\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(22, 20, \"extType\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.extTypes);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(29, 22, \"extPos\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(33, 24, \"beforeName\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(38, 26, \"afterName\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(43, 28, \"extSeparator\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(48, 30, \"extVal\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(52, 32, \"savInvSettings\"));\n      }\n    },\n    directives: [i4.IonHeader, i4.IonToolbar, i4.IonButton, i4.IonIcon, i4.IonLabel, i4.IonContent, i5.ɵNgNoValidate, i5.NgControlStatusGroup, i5.FormGroupDirective, i4.IonItem, i4.IonInput, i4.TextValueAccessor, i5.NgControlStatus, i5.FormControlName, i4.IonSelect, i4.SelectValueAccessor, i4.IonSelectOption, i6.NgForOf, i4.IonCheckbox, i4.BooleanValueAccessor],\n    pipes: [i7.TranslatePipe],\n    styles: [\".abs-center-x[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%)}.my-custom-scrollbar[_ngcontent-%COMP%]{position:relative;height:200px;overflow:auto}.table-wrapper-scroll-y[_ngcontent-%COMP%]{display:block}input[type=text][_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{width:100%;padding:12px;border:1px solid #ccc;border-radius:4px;box-sizing:border-box;margin-top:6px;margin-bottom:16px;resize:vertical}input[type=submit][_ngcontent-%COMP%]{background-color:#04aa6d;color:#fff;padding:12px 20px;border:none;border-radius:4px;cursor:pointer}input[type=submit][_ngcontent-%COMP%]:hover{background-color:#45a049}.form-group[required=required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:not(.required){border:1px solid black}.form-group[required=required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:1px solid red}.form-group[required=required][_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:after{content:\\\" *\\\";color:red}.form-group[required][_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:1px solid red}.form-group[required][_ngcontent-%COMP%]   label[_ngcontent-%COMP%]:after{content:\\\" *\\\";color:red}\"]\n  });\n  return Settings;\n})();","map":null,"metadata":{},"sourceType":"module"}