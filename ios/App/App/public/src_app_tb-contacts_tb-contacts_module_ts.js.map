{"version":3,"file":"src_app_tb-contacts_tb-contacts_module_ts.js","mappings":"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","sources":["./src/app/tb-contacts/tb-contacts-routing.module.ts","./src/app/tb-contacts/tb-contacts.module.ts","./src/app/tb-contacts/tb-contacts.ts","./src/app/tb-contacts/tb-contacts.html"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TabContacts } from './tb-contacts';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TabContacts,\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TabContactsRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TabContacts } from './tb-contacts';\r\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\r\n\r\nimport { TabContactsRoutingModule } from './tb-contacts-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MaterialModule } from '../material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    ExploreContainerComponentModule,\r\n    TabContactsRoutingModule,\r\n    MaterialModule,\r\n\r\n  ],\r\n  declarations: [TabContacts]\r\n})\r\nexport class TabContactsModule {}\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalFocus } from '../modal/modal-focus';\r\nimport { Chantier } from '../models/chantier';\r\nimport { User } from '../models/user';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-tb-contacts',\r\n  templateUrl: 'tb-contacts.html',\r\n  styleUrls: ['tb-contacts.css']\r\n})\r\nexport class TabContacts implements OnInit  {\r\n  // headElements = ['#', 'Prenom', 'Nom', 'Adresse'];\r\n  headElements = ['lastName', 'firstName', 'address','...'];\r\n\r\n  contactsList: Array<User> = [];\r\n  public modal = new NgbdModalFocus(this.modalS);\r\n\r\n\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private modalS : NgbModal,\r\n              private storageService:StorageService,\r\n              private router: Router,\r\n              private _liveAnnouncer: LiveAnnouncer)\r\n              {\r\n              }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  async ionViewDidEnter(){\r\n    console.log('view did enter');\r\n    this.storageService.init();\r\n    this.contactsList = await this.storageService.get('Contacts');\r\n    this.dataSource = new MatTableDataSource(this.contactsList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.storageService.init();\r\n    this.contactsList = await this.storageService.get('Contacts');\r\n    this.dataSource = new MatTableDataSource(this.contactsList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  CreateClient(){\r\n    console.log('create client');\r\n    this.router.navigate(['new-contact']);\r\n    // this.router.navigate(['tb-new-contact']);\r\n  }\r\n  OpenContact(user:User)\r\n  {\r\n    this.router.navigate(['client',{userId: user.userId}]);\r\n  }\r\n\r\n  EditContact(user:User)\r\n  {\r\n    this.router.navigate(['new-contact',{userId: user.userId}]);\r\n    console.log('click',user.firstName);\r\n  }\r\n  async deleteContact(user:User){\r\n    let res : string =null;\r\n    await this.modal.open('delCli',user.firstName+' '+user.lastName.toUpperCase())\r\n    .then(result => result.result\r\n      .then((data) => {\r\n        res='OK';\r\n      }, (reason) => {\r\n      res='DISMISS' }\r\n      ));\r\n\r\n    if(res==='DISMISS')\r\n        return ;\r\n    this.contactsList = this.contactsList.filter(a => a.userId !== user.userId);\r\n    this.storageService.set('Contacts', this.contactsList);\r\n  }\r\n  NewWork(us : User)\r\n  {\r\n    this.router.navigate(['createworksite',{userId : us.userId}],{replaceUrl:true});\r\n  }\r\n}\r\n\r\n","export default \"<ion-content [fullscreen]=\\\"true\\\" style=\\\"overflow-y: auto;\\\">\\r\\n  <div class=\\\"jumbotron text-center\\\">\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-header\\\">\\r\\n        Mes clients\\r\\n      </div>\\r\\n    </div>\\r\\n    <mat-form-field appearance=\\\"standard\\\">\\r\\n      <mat-label>Recherche</mat-label>\\r\\n      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"Ex. Mia\\\" #input>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <div class=\\\"mat-elevation-z8\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"announceSortChange($event)\\\">\\r\\n        <!-- ID Column -->\\r\\n        <ng-container matColumnDef=\\\"lastName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\\"Sort by name\\\"> Nom </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.lastName.toUpperCase()}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Progress Column -->\\r\\n        <ng-container matColumnDef=\\\"firstName\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\\"Sort by firstName\\\"> Prénom </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.firstName}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- Name Column -->\\r\\n        <ng-container matColumnDef=\\\"address\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header sortActionDescription=\\\"Sort by address\\\"> Adresse </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\"> {{row.address}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"...\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> ... </th>\\r\\n          <td mat-cell *matCellDef=\\\"let row\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n            <button mat-icon-button [matMenuTriggerFor]=\\\"menu\\\" type=\\\"button\\\">\\r\\n              <mat-icon>more_horiz</mat-icon>\\r\\n            </button>\\r\\n            <mat-menu #menu=\\\"matMenu\\\">\\r\\n              <button mat-menu-item type=\\\"button\\\" (click)=\\\"NewWork(row)\\\">\\r\\n                <mat-icon>add_location</mat-icon>\\r\\n                <span>Nouveau chantier</span>\\r\\n              </button>\\r\\n              <button mat-menu-item type=\\\"button\\\" (click)=\\\"EditContact(row)\\\">\\r\\n                <mat-icon>edit</mat-icon>\\r\\n                <span>Modifier</span>\\r\\n              </button>\\r\\n              <button mat-menu-item (click)=\\\"deleteContact(row)\\\" type=\\\"button\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n                <span>Supprimer</span>\\r\\n              </button>\\r\\n            </mat-menu>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"headElements\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: headElements;\\\" (click)=\\\"OpenContact(row)\\\"></tr>\\r\\n\\r\\n        <!-- Row shown when there is no matching data. -->\\r\\n        <tr class=\\\"mat-row\\\" *matNoDataRow>\\r\\n          <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">No data matching the Recherche \\\"{{input.value}}\\\"</td>\\r\\n        </tr>\\r\\n\\r\\n      </table>\\r\\n\\r\\n      <mat-paginator mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\" aria-label=\\\"Select page of dataSource\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"card text-center\\\">\\r\\n      <div class=\\\"card-footer text-muted\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"CreateClient()\\\">Nouveau client</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ion-content>\";"],"names":[],"sourceRoot":"webpack:///"}