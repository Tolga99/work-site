{"version":3,"file":"src_app_tb-contacts_tb-contacts_module_ts.js","mappings":"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","sources":["./src/app/explore-container/explore-container.component.ts","./src/app/explore-container/explore-container.module.ts","./src/app/tb-contacts/tb-contacts-routing.module.ts","./src/app/tb-contacts/tb-contacts.module.ts","./src/app/tb-contacts/tb-contacts.ts"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-explore-container',\r\n  templateUrl: './explore-container.component.html',\r\n  styleUrls: ['./explore-container.component.scss'],\r\n})\r\nexport class ExploreContainerComponent implements OnInit {\r\n  @Input() name: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ExploreContainerComponent } from './explore-container.component';\r\n\r\n@NgModule({\r\n  imports: [ CommonModule, FormsModule, IonicModule],\r\n  declarations: [ExploreContainerComponent],\r\n  exports: [ExploreContainerComponent]\r\n})\r\nexport class ExploreContainerComponentModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TabContacts } from './tb-contacts';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TabContacts,\r\n  }\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TabContactsRoutingModule {}\r\n","import { IonicModule } from '@ionic/angular';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TabContacts } from './tb-contacts';\r\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\r\n\r\nimport { TabContactsRoutingModule } from './tb-contacts-routing.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { MaterialModule } from '../material.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    IonicModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    ExploreContainerComponentModule,\r\n    TabContactsRoutingModule,\r\n    MaterialModule,\r\n\r\n  ],\r\n  declarations: [TabContacts]\r\n})\r\nexport class TabContactsModule {}\r\n","import { LiveAnnouncer } from '@angular/cdk/a11y';\r\nimport { Component, OnChanges, OnDestroy, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbdModalFocus } from '../modal/modal-focus';\r\nimport { Chantier } from '../models/chantier';\r\nimport { User } from '../models/user';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Component({\r\n  selector: 'app-tb-contacts',\r\n  templateUrl: 'tb-contacts.html',\r\n  styleUrls: ['tb-contacts.css']\r\n})\r\nexport class TabContacts implements OnInit  {\r\n  // headElements = ['#', 'Prenom', 'Nom', 'Adresse'];\r\n  headElements = ['lastName', 'firstName', 'address','...'];\r\n\r\n  contactsList: Array<User> = [];\r\n  public modal = new NgbdModalFocus(this.modalS);\r\n\r\n\r\n  dataSource: MatTableDataSource<User>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private modalS : NgbModal,\r\n              private storageService:StorageService,\r\n              private router: Router,\r\n              private _liveAnnouncer: LiveAnnouncer)\r\n              {\r\n              }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  announceSortChange(sortState: Sort) {\r\n    // This example uses English messages. If your application supports\r\n    // multiple language, you would internationalize these strings.\r\n    // Furthermore, you can customize the message to add additional\r\n    // details about the values being sorted.\r\n    if (sortState.direction) {\r\n      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);\r\n    } else {\r\n      this._liveAnnouncer.announce('Sorting cleared');\r\n    }\r\n  }\r\n\r\n  async ionViewDidEnter(){\r\n    console.log('view did enter');\r\n    this.storageService.init();\r\n    this.contactsList = await this.storageService.get('Contacts');\r\n    this.dataSource = new MatTableDataSource(this.contactsList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  async ngOnInit(): Promise<void> {\r\n    this.storageService.init();\r\n    this.contactsList = await this.storageService.get('Contacts');\r\n    this.dataSource = new MatTableDataSource(this.contactsList);\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  CreateClient(){\r\n    console.log('create client');\r\n    this.router.navigate(['new-contact']);\r\n    // this.router.navigate(['tb-new-contact']);\r\n  }\r\n  OpenContact(user:User)\r\n  {\r\n    this.router.navigate(['client',{userId: user.userId}]);\r\n  }\r\n\r\n  EditContact(user:User)\r\n  {\r\n    this.router.navigate(['new-contact',{userId: user.userId}]);\r\n    console.log('click',user.firstName);\r\n  }\r\n  async deleteContact(user:User){\r\n    let res : string =null;\r\n    await this.modal.open('delCli',user.firstName+' '+user.lastName.toUpperCase())\r\n    .then(result => result.result\r\n      .then((data) => {\r\n        res='OK';\r\n      }, (reason) => {\r\n      res='DISMISS' }\r\n      ));\r\n\r\n    if(res==='DISMISS')\r\n        return ;\r\n    this.contactsList = this.contactsList.filter(a => a.userId !== user.userId);\r\n    this.storageService.set('Contacts', this.contactsList);\r\n  }\r\n  NewWork(us : User)\r\n  {\r\n    this.router.navigate(['createworksite',{userId : us.userId}],{replaceUrl:true});\r\n  }\r\n}\r\n\r\n"],"names":["LiveAnnouncer","Component","ViewChild","MatPaginator","MatSort","MatTableDataSource","Router","NgbModal","NgbdModalFocus","StorageService","TabContacts","constructor","modalS","storageService","router","_liveAnnouncer","applyFilter","event","filterValue","target","value","dataSource","filter","trim","toLowerCase","paginator","firstPage","announceSortChange","sortState","direction","announce","ionViewDidEnter","console","log","init","contactsList","get","sort","ngOnInit","CreateClient","navigate","OpenContact","user","userId","EditContact","firstName","deleteContact","res","modal","open","lastName","toUpperCase","then","result","data","reason","a","set","NewWork","us","replaceUrl","args","selector","template"],"sourceRoot":"webpack:///"}