{"version":3,"file":"src_app_payment_payment_module_ts.js","mappings":"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","sources":["./src/app/payment/payment-routing.module.ts","./src/app/payment/payment.module.ts","./src/app/payment/payment.ts","./src/app/payment/payment.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { Payment } from './payment';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Payment\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PaymentRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PaymentRoutingModule } from './payment-routing.module';\n\nimport { Payment } from './payment';\nimport { SharedModule } from '../shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PaymentRoutingModule,\n    SharedModule,\n  ],\n  declarations: [Payment]\n})\nexport class PaymentModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { NgbdModalFocus } from '../modal/modal-focus';\nimport { Chantier } from '../models/chantier';\nimport { Facture } from '../models/facture';\nimport { StorageService } from '../services/storage.service';\n\n@Component({\n  selector: 'app-payment',\n  templateUrl: './payment.html',\n  styleUrls: ['./payment.scss'],\n})\nexport class Payment implements OnInit {\n\n  date : string;\n  chantier : Chantier;\n  chantierList : Array<Chantier>;\n  chantierIndex : number;\n  chantierId : string;\n  public selectedInv : Facture;\n  ReceivedMoney : number;\n  formPay = new FormGroup({\n   chantierName: new FormControl(''),\n   payment: new FormControl('', [Validators.required]),\n   address : new FormControl(''),\n });\n\n  headElementsInv = ['Nom facture', 'Total','Reste à payer','Date'];\n  public modal = new NgbdModalFocus(this.modalS);\n  constructor(private modalS :NgbModal,private router: Router,private route:ActivatedRoute, private storageService :StorageService)\n  {\n  }\n\n  async ngOnInit() {\n\n    const nowDate = new Date();\n    this.date = nowDate.getDate()+'/'+(nowDate.getMonth()+1)+'/'+nowDate.getFullYear();\n\n    this.chantierId = this.route.snapshot.paramMap.get('chantierId');\n\n    this.storageService.init();\n    this.chantierList = await this.storageService.get('Chantiers');\n    this.chantierIndex = this.chantierList.findIndex(a => a.chantierId === this.chantierId);\n    this.chantier = this.chantierList.find(a => a.chantierId === this.chantierId);\n    // console.log(this.invList);\n  }\n  SelectInvoice(f : Facture)\n  {\n    this.selectedInv=f;\n    if(this.selectedInv.receivedMoney==null)\n      this.selectedInv.receivedMoney = new Array<{price : number,date : string}>();\n\n    this.ReceivedMoney=0;\n    this.selectedInv.receivedMoney.forEach(element => {\n      this.ReceivedMoney=element.price+this.ReceivedMoney;\n    });\n  }\n  public GetAllReceivedMoney(f : Facture) : number\n  {\n      let total= 0;\n      if(f.receivedMoney==null)\n        f.receivedMoney = new Array<{price: number, date : string}>();\n\n      f.receivedMoney.forEach(element => {\n          total=element.price+total;\n      });\n\n      total = Math.round(total * 100) / 100; // arrondi\n      return total;\n  }\n  GoBack()\n  {\n    this.router.navigate(['worksite',{chantierId: this.chantierId}],{replaceUrl:true});\n  }\n  async SavePay()\n  {\n    const invalid = [];\n    const controls = this.formPay.controls;\n    for (const name in controls) {\n      if (controls[name].invalid) {\n          let nom='';\n          if(name==='payment')\n            nom='Paiement';\n          invalid.push(nom);\n      }\n    }\n    if(this.selectedInv==null)\n      invalid.push('Facture non selectionné');\n    if (!this.formPay.valid || this.selectedInv==null)\n    {\n      let res : string =null;\n      await this.modal.open('field',invalid.toString())\n      .then(result => result.result\n        .then((data) => {\n          res='OK';\n        }, (reason) => {\n        res='DISMISS' }\n        ));\n        return;\n    }\n\n    const pay=this.formPay.get('payment').value;\n    if(Number.parseFloat(pay)==null)\n      return;\n    if(this.selectedInv==null)\n      return;\n\n    if (Number.parseFloat(pay)>(this.selectedInv?.totalPrice - this.GetAllReceivedMoney(this.selectedInv)))\n    {\n      let res : string =null;\n      await this.modal.open('field','Argent encodé plus grand que le reste à payer')\n      .then(result => result.result\n        .then((data) => {\n          res='OK';\n        }, (reason) => {\n        res='DISMISS' }\n        ));\n        return;\n    }\n    this.selectedInv.receivedMoney.push({price : Number.parseFloat(pay),date : this.date});\n    const index= this.chantier.factures.findIndex(a => a.factureId === this.selectedInv.factureId);\n    this.chantier.factures[index] = this.selectedInv;\n\n    this.chantierList[this.chantierIndex] = this.chantier;\n\n    this.storageService.set('Chantiers', this.chantierList);\n\n\n  }\n  Terminer()\n  {\n    this.router.navigate(['/worksite',{chantierId: this.chantierId}],{replaceUrl:true});\n\n  }\n\n}\n","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button (click)=\\\"GoBack()\\\">\\n      <ion-icon name=\\\"arrow-back\\\"></ion-icon>\\n      <ion-label>Retour</ion-label>\\n    </ion-button>\\n  </ion-toolbar>\\n</ion-header>\\n<div class=\\\"container\\\" style=\\\"overflow-y: auto;\\\">\\n\\n  <form [formGroup]=\\\"formPay\\\" (ngSubmit)=\\\"SavePay()\\\">\\n    <div class=\\\"card-header\\\">\\n      Selectionnez la facture concernée :\\n    </div>\\n    <div class=\\\"col-auto table-wrapper-scroll-y my-custom-scrollbar\\\">\\n      <table class=\\\"table table-bordered table-striped mb-0\\\">\\n\\n        <thead>\\n          <tr>\\n            <th *ngFor=\\\"let head of headElementsInv\\\" scope=\\\"col\\\">{{head}} </th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr mdbTableCol *ngFor=\\\"let inv of this.chantier?.factures\\\" (click)=\\\"SelectInvoice(inv)\\\" [ngClass]=\\\"{'class_name': inv === selectedInv}\\\" >\\n            <!-- [ngClass]=\\\"{ 'selectedInv' : inv }\\\"> -->\\n            <!-- <th scope=\\\"row\\\">{{el.id}}</th> -->\\n            <td>{{inv.factureName}}</td>\\n            <td>{{inv.totalPrice}}</td>\\n            <td>{{inv?.totalPrice - GetAllReceivedMoney(inv) | number : '1.2'}}</td>\\n            <td>{{inv.date}}</td>\\n        </tbody>\\n\\n      </table>\\n\\n    </div>\\n    <!-- <div>\\n      <label for=\\\"\\\">Reste à payer : {{selectedInv?.totalPrice - ReceivedMoney }}</label>\\n    </div> -->\\n    <ion-item class=\\\"form-group\\\" required=\\\"required\\\">\\n      <ion-label position=\\\"floating\\\">Paiement</ion-label>\\n      <ion-input type=\\\"number\\\" id=\\\"payment\\\" name=\\\"payment\\\" formControlName=\\\"payment\\\" placeholder=\\\"...\\\" required=\\\"required\\\"></ion-input>\\n    </ion-item>\\n    <button class=\\\"btn btn-danger\\\"> Enregistrer paiement</button>\\n  </form>\\n  <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" (click)=\\\"Terminer()\\\"> Terminer paiement</button>\\n\\n</div>\";"],"names":[],"sourceRoot":"webpack:///"}